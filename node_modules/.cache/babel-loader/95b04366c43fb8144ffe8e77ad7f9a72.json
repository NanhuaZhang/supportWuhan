{"remainingRequest":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/babel-loader/lib/index.js!/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/jira-request/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/jira-request/index.vue","mtime":1574762895031},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _workPlat = require(\"@/api/workPlat\");\n\nvar _version = require(\"@/api/version\");\n\nvar _fileSaver = _interopRequireDefault(require(\"file-saver\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'JiraRequest',\n  filters: {\n    getName: function getName(value) {\n      if (value == null) {\n        return null;\n      }\n\n      return value.displayName.split('@')[0];\n    }\n  },\n  data: function data() {\n    return {\n      jira_versions: [],\n      // 筛选条件\n      form_user: '',\n      form_version: [],\n      // fields: [{\"label\": \"名称\", \"key\": \"summary\", \"disable\": 0}, {\"label\": \"状态\", \"key\": \"summary\", \"disable\": 0},{\"label\": \"产品\", \"key\": \"fields.customfield_10306.displayName\"}],\n      fields: 'summary,customfield_11200,issuetype,customfield_10307,customfield_10308,customfield_11003,customfield_11002,customfield_10304,customfield_10305,customfield_10306,duedate,issuelinks,subtasks,status',\n      //\n      jira_tables: [],\n      //\n      users: [],\n      loadingShown: false\n    };\n  },\n  computed: {\n    qa_efforts: function qa_efforts() {\n      var effort = 0;\n      this.jira_tables.forEach(function (issue) {\n        effort += issue.fields.customfield_11003;\n      });\n      return effort.toFixed(2);\n    },\n    dev_efforts: function dev_efforts() {\n      var effort = 0;\n      this.jira_tables.forEach(function (issue) {\n        effort += issue.fields.customfield_11002;\n      });\n      return effort.toFixed(2);\n    },\n    status_list: function status_list() {\n      var status_list = new Set();\n      this.jira_tables.forEach(function (issue) {\n        status_list.add(issue.fields.status.name);\n      });\n      var result = [];\n      Array.from(status_list).forEach(function (status) {\n        result.push({\n          'text': status,\n          'value': status\n        });\n      });\n      return result;\n    }\n  },\n  created: function created() {\n    this.get_users();\n    this.get_jira_versions();\n  },\n  methods: {\n    get_jira_versions: function get_jira_versions() {\n      var _this = this;\n\n      (0, _version.getActiveVersions)().then(function (response) {\n        console.log(response.data);\n        _this.jira_versions = response.data;\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    },\n    status_filter: function status_filter(value, row, column) {\n      console.log(value, row, column); // const property = column['property'];\n\n      return row.fields.status.name === value;\n    },\n    // qa delay marked\n    qaDelay: function qaDelay(_ref) {\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex;\n\n      if (row.delay_reason.length > 1) {\n        return 'warning-row';\n      }\n\n      return '';\n    },\n    get_users: function get_users() {\n      var _this2 = this;\n\n      (0, _workPlat.fetchUserList)().then(function (response) {\n        console.log(response.data); // this.getVersion();\n\n        _this2.users = response.data;\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    },\n    qa_time_sort: function qa_time_sort(a, b) {\n      a = a.fields.customfield_10305;\n      b = b.fields.customfield_10305;\n\n      if (a == null && b == null) {\n        return 0;\n      }\n\n      if (a == null) {\n        return -1;\n      }\n\n      if (b == null) {\n        return 1;\n      }\n\n      return a >= b ? 1 : -1;\n    },\n    jiraShown: function jiraShown() {\n      var _this3 = this;\n\n      if (this.form_user === '' && this.form_version.length === 0) {\n        this.$message({\n          showClose: true,\n          type: 'warning',\n          message: '用户和所选版本不能同时为空'\n        });\n        return;\n      }\n\n      this.loadingShown = true;\n      var postJson = {\n        'role': this.form_user.group,\n        // \"user\": this.form_user,\n        'user': this.form_user.email,\n        'version': this.form_version.join(','),\n        'fields': this.fields\n      };\n      console.log(postJson);\n      (0, _workPlat.fectchJiraList)(postJson).then(function (response) {\n        console.log(response.data);\n        _this3.jira_tables = response.data;\n\n        _this3.$message({\n          showClose: true,\n          message: '获取成功',\n          type: 'success'\n        });\n\n        _this3.loadingShown = false;\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n        this.loadingShown = false;\n      }).finally(function () {\n        // always executed\n        console.log('test');\n      });\n    },\n    generate_weekly_report: function generate_weekly_report() {\n      var _this4 = this;\n\n      if (this.form_user === '') {\n        this.$message({\n          showClose: true,\n          message: '请选择用户生成周报！',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var postJson = {\n        'user_email': this.form_user.email,\n        'role': this.form_user.group\n      };\n      (0, _workPlat.fetchWeeklyReport)(postJson).then(function (response) {\n        console.log(response.data);\n\n        _this4.$message({\n          showClose: true,\n          message: '生成成功',\n          type: 'success'\n        });\n\n        var file = new File([response.data], 'weekly_report.md', {\n          type: 'text/plain;charset=utf-8'\n        });\n        (0, _fileSaver.default)(file);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {\n        // always executed\n        console.log('test');\n      });\n    },\n    generate_last_weekly_report: function generate_last_weekly_report() {\n      var _this5 = this;\n\n      if (this.form_user === '') {\n        this.$message({\n          showClose: true,\n          message: '请选择用户生成周报！',\n          type: 'warning'\n        });\n        return;\n      }\n\n      var postJson = {\n        'user_email': this.form_user.email,\n        'role': this.form_user.group\n      };\n      (0, _workPlat.fetchLastWeeklyReport)(postJson).then(function (response) {\n        console.log(response.data);\n\n        _this5.$message({\n          showClose: true,\n          message: '生成成功',\n          type: 'success'\n        });\n\n        var file = new File([response.data], 'last_weekly_report.md', {\n          type: 'text/plain;charset=utf-8'\n        });\n        (0, _fileSaver.default)(file);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {\n        // always executed\n        console.log('test');\n      });\n    }\n  }\n};\nexports.default = _default;",null]}