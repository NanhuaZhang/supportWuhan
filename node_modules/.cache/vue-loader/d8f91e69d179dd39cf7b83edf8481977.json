{"remainingRequest":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/table/complex-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/table/complex-table.vue","mtime":1579933868965},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchList, addInfo, editInfo, deleteInfo } from '@/api/report'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    environmentFilter(status) {\n      const statusMap = {\n        test: 'success',\n        uat: 'info',\n        live: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      add_form: {\n        'time': '',\n        'channel': '',\n        'amount': 0,\n        'name': ''\n      },\n      update_form: {\n        'id': '',\n        'time': '',\n        'channel': '',\n        'amount': 0,\n        'name': ''\n      },\n      dialogFormVisible: false,\n      dialogEditVisible: false,\n      tableKey: 0,\n      list: [],\n      downloadLoading: false,\n      listLoading: false,\n      // 条数\n      total: 0,\n      // 金额\n      total_amount: 0\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    time_sort(a, b) {\n      return a < b\n    },\n    handleDelete(id) {\n      deleteInfo({ 'id': id }).then(response => {\n        this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        })\n        this.getList()\n      })\n    },\n    edit_visiable(row) {\n      this.dialogEditVisible = true\n      this.update_form = row\n      this.update_form.id = row._id\n      console.log(this.update_form)\n    },\n    handleUpdate() {\n      editInfo(this.update_form).then(response => {\n        this.$message({\n          showClose: true,\n          message: '编辑成功',\n          type: 'success'\n        })\n        this.getList()\n      })\n      this.dialogEditVisible = false\n    },\n    handleAddClick() {\n      addInfo(this.add_form).then(response => {\n        this.$message({\n          showClose: true,\n          message: '添加成功',\n          type: 'success'\n        })\n        this.getList()\n      })\n      this.dialogFormVisible = false\n    },\n    getList() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        console.log(response)\n        this.list = response.results.details\n        this.total = response.results.transaction_num\n        this.total_amount = response.results.amount\n        // console.log(response)\n        this.listLoading = false\n      })\n    },\n\n    handleDownload() {\n      this.downloadLoading = true\n        import('@/vendor/Export2Excel').then(excel => {\n          const tHeader = ['捐赠时间', '金额', '渠道', '名字']\n          const filterVal = ['time', 'amount', 'channel', 'name']\n          const data = this.formatJson(filterVal, this.list)\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: '捐赠金额统计表'\n          })\n          this.downloadLoading = false\n        })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    }\n  }\n}\n",null]}