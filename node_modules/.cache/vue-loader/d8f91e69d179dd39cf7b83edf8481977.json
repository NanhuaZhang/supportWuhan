{"remainingRequest":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/table/complex-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/table/complex-table.vue","mtime":1579887280972},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {fetchList, addInfo, editInfo, deleteInfo} from '@/api/report'\nimport waves from '@/directive/waves' // waves directive\nimport {parseTime} from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport UploadExcelComponent from '@/components/UploadExcel/index.vue'\n\nexport default {\n  name: 'ComplexTable',\n  components: {Pagination, UploadExcelComponent},\n  directives: {waves},\n  filters: {\n    environmentFilter(status) {\n      const statusMap = {\n        test: 'success',\n        uat: 'info',\n        live: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      add_form: {\n        \"time\": \"\",\n        \"route\": \"\",\n        \"amount\": \"\",\n        \"name\": \"\"\n      },\n      update_form: {\n        \"time\": \"\",\n        \"route\": \"\",\n        \"amount\": \"\",\n        \"name\": \"\"\n      },\n      dialogFormVisible: false,\n      dialogEditVisible: false,\n      tableKey: 0,\n      list: [],\n      downloadLoading: false,\n      listLoading: false,\n      //条数\n      total: 0,\n      //金额\n      total_amount: 0,\n      //upload\n      tableData: [],\n      tableHeader: []\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    handleDelete(id) {\n      deleteInfo(id).then(response => {\n        this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        });\n        this.getList();\n      });\n    },\n    edit_visiable(row) {\n      this.dialogEditVisible = true;\n      this.update_form = row;\n    },\n    handleUpdate(row) {\n      editInfo(this.update_form).then(response => {\n        this.$message({\n          showClose: true,\n          message: '编辑成功',\n          type: 'success'\n        });\n        this.getList();\n      });\n      this.dialogEditVisible = false;\n    },\n    handleAddClick() {\n      addInfo(this.add_form).then(response => {\n        this.$message({\n          showClose: true,\n          message: '添加成功',\n          type: 'success'\n        });\n        this.getList();\n      });\n      this.dialogFormVisible = false;\n    },\n    beforeUpload(file) {\n      const isLt1M = file.size / 1024 / 1024 < 1\n\n      if (isLt1M) {\n        return true\n      }\n\n      this.$message({\n        message: 'Please do not upload files larger than 1m in size.',\n        type: 'warning'\n      })\n      return false\n    },\n    handleSuccess({results, header}) {\n      this.tableData = results\n      this.tableHeader = header\n    },\n    getList() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list = response.data.items\n        this.total = response.data.total\n        this.listLoading = false;\n      })\n    },\n\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'amount', 'type', 'name']\n        const filterVal = ['timestamp', 'amount', 'type', 'name']\n        const data = this.formatJson(filterVal, this.list)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n  }\n}\n",null]}