{"remainingRequest":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/jira-request/versionConfig/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/src/views/jira-request/versionConfig/index.vue","mtime":1574767124988},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nanhuazhang/IdeaProjects/jira_test_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { fetchJiraVersion } from '@/api/workPlat'\nimport { addVersion, deleteVersion, getActiveVersions } from '@/api/version'\n\nexport default {\n  name: 'VersionConfig',\n  data() {\n    return {\n      multipleSelection: [],\n      versionData: [],\n      addVersion: '',\n      jira_versions: []\n    }\n  },\n  created() {\n    this.getVersion()\n    this.get_jira_versions()\n  },\n  methods: {\n    handleDelete(index, row) {\n      console.log(index, row)\n      this.$confirm('此操作将永久删除该版本, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n        const params = {\n          'id': row.id\n        }\n        deleteVersion(params).then((response) => {\n          console.log(response.status)\n          let index\n          // 这里获取的index，是排序后的数组选中的\n          for (let i = 0; i < this.versionData.length; i++) {\n            if (this.versionData[i].id === row.id) {\n              index = i\n            }\n          }\n          this.versionData.splice(index, 1)\n          this.$message({\n            showClose: true,\n            message: '删除成功',\n            type: 'success'\n          })\n        }).catch(function(error) {\n          // handle error\n          console.log(error)\n        }).finally(function() {\n          // always executed\n\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    get_jira_versions() {\n      fetchJiraVersion().then((response) => {\n        this.jira_versions = response.data\n      }).catch(function(error) {\n        // handle error\n        console.log(error)\n      }).finally(function() {\n        // always executed\n      })\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    getVersion() {\n      getActiveVersions().then((response) => {\n        // handle success\n        console.log(response.data)\n        this.versionData = response.data\n      }).catch(function(error) {\n        // handle error\n        console.log(error)\n      }).finally(function() {\n        // always executed\n      })\n    },\n    add_version() {\n      if (this.addVersion === '') {\n        this.$message({\n          showClose: true,\n          type: 'warning',\n          message: '添加版本不能为空'\n        })\n        return\n      }\n      const params = {\n        'name': this.addVersion\n      }\n      addVersion(params).then((response) => {\n        console.log(response.data)\n        // this.getVersion();\n        if (response.result === true) {\n          this.$message({\n            showClose: true,\n            message: response.msg,\n            type: 'success'\n          })\n          this.getVersion()\n          this.addVersion = ''\n        } else {\n          this.$message({\n            showClose: true,\n            message: response.msg,\n            type: 'warning'\n          })\n        }\n      }).catch(function(error) {\n        // handle error\n        console.log(error)\n      }).finally(function() {\n        // always executed\n      })\n    }\n  }\n}\n",null]}